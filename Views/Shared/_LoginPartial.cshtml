@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    
    <div class="dropdown ml-2">
        <button type="button" class="btn btn-outline-light dropdown-toggle" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"><i class="far fa-user-circle"></i> Cuenta</button>
        
        <div class="dropdown-menu">
            <li class="nav-item">
                 <a id="manage" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">@UserManager.GetUserName(User)!</a>
            </li>
            <div class="dropdown-divider"></div>
            <li class="nav-item">
                <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                    <button id="logout" type="submit" class="nav-link btn btn-link text-dark"><i class="fas fa-sign-in-alt"></i> Cerrar Sesión</button>
                </form>
            </li>
        </div>
    </div>
}
else
{
    <li class="nav-item">
        <a class="btn btn-outline-light ml-2" id="register" asp-area="Identity" asp-page="/Account/Register"><i class="fas fa-user-plus"></i> Registrate</a>
    </li>
    <li class="nav-item">
        <a class=" btn btn-outline-light ml-2" id="login" asp-area="Identity" asp-page="/Account/Login"><i class="fas fa-user-check"></i> Iniciar Sesión</a>
    </li>
}
</ul>
